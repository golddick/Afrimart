{"ast":null,"code":"'use strict';\n\nlet {\n  isClean,\n  my\n} = require('./symbols');\n\nlet MapGenerator = require('./map-generator');\n\nlet stringify = require('./stringify');\n\nlet Container = require('./container');\n\nlet Document = require('./document');\n\nlet warnOnce = require('./warn-once');\n\nlet Result = require('./result');\n\nlet parse = require('./parse');\n\nlet Root = require('./root');\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n};\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\nconst CHILDREN = 0;\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\n\nfunction getEvents(node) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node.type];\n\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n\n  if (key && node.append) {\n    return [type, type + '-' + key, CHILDREN, type + 'Exit', type + 'Exit-' + key];\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key];\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit'];\n  } else {\n    return [type, type + 'Exit'];\n  }\n}\n\nfunction toStack(node) {\n  let events;\n\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit'];\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  };\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false;\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n  return node;\n}\n\nlet postcss = {};\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root;\n\n    if (typeof css === 'object' && css !== null && (css.type === 'root' || css.type === 'document')) {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root);\n\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser = parse;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root);\n      }\n    }\n\n    this.result = new Result(processor, root, opts);\n    this.helpers = { ...postcss,\n      postcss,\n      result: this.result\n    };\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin,\n          ...plugin.prepare(this.result)\n        };\n      } else {\n        return plugin;\n      }\n    });\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n\n    return this.processing;\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins');\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin;\n\n    try {\n      if (node) node.addToError(error);\n      this.error = error;\n\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin;\n          let pluginVer = plugin.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split('.');\n          let b = runtimeVer.split('.');\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err);\n    }\n\n    return error;\n  }\n\n  prepareVisitors() {\n    this.listeners = {};\n\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin, cb]);\n    };\n\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(`Unknown event ${event} in ${plugin.postcssPlugin}. ` + `Try to update PostCSS (${this.processor.version} now).`);\n          }\n\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter]);\n                } else {\n                  add(plugin, event + '-' + filter.toLowerCase(), plugin[event][filter]);\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event]);\n            }\n          }\n        }\n      }\n    }\n\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n\n  async runAsync() {\n    this.plugin = 0;\n\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i];\n      let promise = this.runOnRoot(plugin);\n\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n\n    this.prepareVisitors();\n\n    if (this.hasListener) {\n      let root = this.result.root;\n\n      while (!root[isClean]) {\n        root[isClean] = true;\n        let stack = [toStack(root)];\n\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node = stack[stack.length - 1].node;\n              throw this.handleError(e, node);\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin;\n\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot => visitor(subRoot, this.helpers));\n              await Promise.all(roots);\n            } else {\n              await visitor(root, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n\n    this.processed = true;\n    return this.stringify();\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin;\n\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root => plugin.Once(root, this.helpers));\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n\n          return roots;\n        }\n\n        return plugin.Once(this.result.root, this.helpers);\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin);\n\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n\n    this.prepareVisitors();\n\n    if (this.hasListener) {\n      let root = this.result.root;\n\n      while (!root[isClean]) {\n        root[isClean] = true;\n        this.walkSync(root);\n      }\n\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n    }\n\n    return this.result;\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected);\n  }\n\n  toString() {\n    return this.css;\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin;\n      let promise;\n\n      try {\n        promise = visitor(node, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf);\n      }\n\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true;\n      }\n\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1];\n    let {\n      node,\n      visitors\n    } = visit;\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop();\n      return;\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex];\n      visit.visitorIndex += 1;\n\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = [];\n        visit.visitorIndex = 0;\n      }\n\n      this.result.lastPlugin = plugin;\n\n      try {\n        return visitor(node.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node);\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator;\n      let child;\n\n      while (child = node.nodes[node.indexes[iterator]]) {\n        node.indexes[iterator] += 1;\n\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n\n      visit.iterator = 0;\n      delete node.indexes[iterator];\n    }\n\n    let events = visit.events;\n\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex];\n      visit.eventIndex += 1;\n\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true;\n          visit.iterator = node.getIterator();\n        }\n\n        return;\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event];\n        return;\n      }\n    }\n\n    stack.pop();\n  }\n\n  walkSync(node) {\n    node[isClean] = true;\n    let events = getEvents(node);\n\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return;\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings();\n  }\n\n  get content() {\n    return this.stringify().content;\n  }\n\n  get css() {\n    return this.stringify().css;\n  }\n\n  get map() {\n    return this.stringify().map;\n  }\n\n  get messages() {\n    return this.sync().messages;\n  }\n\n  get opts() {\n    return this.result.opts;\n  }\n\n  get processor() {\n    return this.result.processor;\n  }\n\n  get root() {\n    return this.sync().root;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult';\n  }\n\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant;\n};\n\nmodule.exports = LazyResult;\nLazyResult.default = LazyResult;\nRoot.registerLazyResult(LazyResult);\nDocument.registerLazyResult(LazyResult);","map":{"version":3,"names":["isClean","my","require","MapGenerator","stringify","Container","Document","warnOnce","Result","parse","Root","TYPE_TO_CLASS_NAME","atrule","comment","decl","document","root","rule","PLUGIN_PROPS","AtRule","AtRuleExit","Comment","CommentExit","Declaration","DeclarationExit","DocumentExit","Once","OnceExit","postcssPlugin","prepare","RootExit","Rule","RuleExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","node","key","type","prop","toLowerCase","name","append","toStack","events","eventIndex","iterator","visitorIndex","visitors","cleanMarks","nodes","forEach","i","postcss","LazyResult","constructor","processor","css","opts","stringified","processed","map","inline","prev","parser","syntax","error","rebuild","result","helpers","plugins","plugin","async","Promise","reject","resolve","processing","runAsync","catch","onRejected","finally","onFinally","getAsyncError","Error","handleError","lastPlugin","addToError","setMessage","postcssVersion","process","env","NODE_ENV","pluginName","pluginVer","runtimeVer","version","a","split","b","parseInt","console","err","prepareVisitors","listeners","add","cb","push","event","test","filter","hasListener","Object","keys","length","promise","runOnRoot","stack","visitTick","e","visitor","roots","subRoot","all","sync","str","stringifier","data","generate","walkSync","visitSync","onFulfilled","toString","proxyOf","parent","visit","pop","toProxy","child","indexes","getIterator","each","warnings","content","messages","Symbol","toStringTag","registerPostcss","dependant","module","exports","default","registerLazyResult"],"sources":["/Users/macbook/Desktop/afrimartCom/node_modules/postcss/lib/lazy-result.js"],"sourcesContent":["'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}