{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\n\nlet {\n  existsSync,\n  readFileSync\n} = require('fs');\n\nlet {\n  dirname,\n  join\n} = require('path');\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString();\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str);\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return;\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, 'data:');\n    let prev = opts.map ? opts.map.prev : undefined;\n    let text = this.loadMap(opts.from, prev);\n\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n\n    if (this.mapFile) this.root = dirname(this.mapFile);\n    if (text) this.text = text;\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text);\n    }\n\n    return this.consumerCache;\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length));\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding);\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim();\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false;\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string' || Array.isArray(map.sections);\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n    if (!comments) return; // sourceMappingURLs from comments, strings, etc.\n\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf('*/', start);\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path);\n\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, 'utf-8').toString().trim();\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false;\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev;\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file);\n\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n\n          if (!map) {\n            throw new Error('Unable to load previous source map: ' + prevPath.toString());\n          }\n\n          return map;\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString();\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error('Unsupported previous source map format: ' + prev.toString());\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname(file), map);\n      return this.loadFile(map);\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  }\n\n  withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  }\n\n}\n\nmodule.exports = PreviousMap;\nPreviousMap.default = PreviousMap;","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","existsSync","readFileSync","dirname","join","fromBase64","str","Buffer","from","toString","window","atob","PreviousMap","constructor","css","opts","map","loadAnnotation","inline","startWith","annotation","prev","undefined","text","loadMap","mapFile","root","consumer","consumerCache","decodeInline","baseCharsetUri","baseUri","charsetUri","uri","test","decodeURIComponent","substr","RegExp","lastMatch","length","encoding","match","Error","getAnnotationURL","sourceMapString","replace","trim","isMap","mappings","_mappings","Array","isArray","sections","comments","start","lastIndexOf","pop","end","indexOf","substring","loadFile","path","file","prevPath","fromSourceMap","JSON","stringify","string","withContent","sourcesContent","module","exports","default"],"sources":["/Users/macbook/Desktop/afrimartCom/node_modules/postcss/lib/previous-map.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n"],"mappings":"AAAA;;AAEA,IAAI;EAAEA,iBAAF;EAAqBC;AAArB,IAA4CC,OAAO,CAAC,eAAD,CAAvD;;AACA,IAAI;EAAEC,UAAF;EAAcC;AAAd,IAA+BF,OAAO,CAAC,IAAD,CAA1C;;AACA,IAAI;EAAEG,OAAF;EAAWC;AAAX,IAAoBJ,OAAO,CAAC,MAAD,CAA/B;;AAEA,SAASK,UAAT,CAAoBC,GAApB,EAAyB;EACvB,IAAIC,MAAJ,EAAY;IACV,OAAOA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiB,QAAjB,EAA2BG,QAA3B,EAAP;EACD,CAFD,MAEO;IACL;IACA,OAAOC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAP;EACD;AACF;;AAED,MAAMM,WAAN,CAAkB;EAChBC,WAAW,CAACC,GAAD,EAAMC,IAAN,EAAY;IACrB,IAAIA,IAAI,CAACC,GAAL,KAAa,KAAjB,EAAwB;IACxB,KAAKC,cAAL,CAAoBH,GAApB;IACA,KAAKI,MAAL,GAAc,KAAKC,SAAL,CAAe,KAAKC,UAApB,EAAgC,OAAhC,CAAd;IAEA,IAAIC,IAAI,GAAGN,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACC,GAAL,CAASK,IAApB,GAA2BC,SAAtC;IACA,IAAIC,IAAI,GAAG,KAAKC,OAAL,CAAaT,IAAI,CAACP,IAAlB,EAAwBa,IAAxB,CAAX;;IACA,IAAI,CAAC,KAAKI,OAAN,IAAiBV,IAAI,CAACP,IAA1B,EAAgC;MAC9B,KAAKiB,OAAL,GAAeV,IAAI,CAACP,IAApB;IACD;;IACD,IAAI,KAAKiB,OAAT,EAAkB,KAAKC,IAAL,GAAYvB,OAAO,CAAC,KAAKsB,OAAN,CAAnB;IAClB,IAAIF,IAAJ,EAAU,KAAKA,IAAL,GAAYA,IAAZ;EACX;;EAEDI,QAAQ,GAAG;IACT,IAAI,CAAC,KAAKC,aAAV,EAAyB;MACvB,KAAKA,aAAL,GAAqB,IAAI9B,iBAAJ,CAAsB,KAAKyB,IAA3B,CAArB;IACD;;IACD,OAAO,KAAKK,aAAZ;EACD;;EAEDC,YAAY,CAACN,IAAD,EAAO;IACjB,IAAIO,cAAc,GAAG,gDAArB;IACA,IAAIC,OAAO,GAAG,iCAAd;IACA,IAAIC,UAAU,GAAG,yCAAjB;IACA,IAAIC,GAAG,GAAG,0BAAV;;IAEA,IAAID,UAAU,CAACE,IAAX,CAAgBX,IAAhB,KAAyBU,GAAG,CAACC,IAAJ,CAASX,IAAT,CAA7B,EAA6C;MAC3C,OAAOY,kBAAkB,CAACZ,IAAI,CAACa,MAAL,CAAYC,MAAM,CAACC,SAAP,CAAiBC,MAA7B,CAAD,CAAzB;IACD;;IAED,IAAIT,cAAc,CAACI,IAAf,CAAoBX,IAApB,KAA6BQ,OAAO,CAACG,IAAR,CAAaX,IAAb,CAAjC,EAAqD;MACnD,OAAOlB,UAAU,CAACkB,IAAI,CAACa,MAAL,CAAYC,MAAM,CAACC,SAAP,CAAiBC,MAA7B,CAAD,CAAjB;IACD;;IAED,IAAIC,QAAQ,GAAGjB,IAAI,CAACkB,KAAL,CAAW,iCAAX,EAA8C,CAA9C,CAAf;IACA,MAAM,IAAIC,KAAJ,CAAU,qCAAqCF,QAA/C,CAAN;EACD;;EAEDG,gBAAgB,CAACC,eAAD,EAAkB;IAChC,OAAOA,eAAe,CAACC,OAAhB,CAAwB,6BAAxB,EAAuD,EAAvD,EAA2DC,IAA3D,EAAP;EACD;;EAEDC,KAAK,CAAC/B,GAAD,EAAM;IACT,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAP;IAC7B,OACE,OAAOA,GAAG,CAACgC,QAAX,KAAwB,QAAxB,IACA,OAAOhC,GAAG,CAACiC,SAAX,KAAyB,QADzB,IAEAC,KAAK,CAACC,OAAN,CAAcnC,GAAG,CAACoC,QAAlB,CAHF;EAKD;;EAEDnC,cAAc,CAACH,GAAD,EAAM;IAClB,IAAIuC,QAAQ,GAAGvC,GAAG,CAAC2B,KAAJ,CAAU,8BAAV,CAAf;IACA,IAAI,CAACY,QAAL,EAAe,OAFG,CAIlB;;IACA,IAAIC,KAAK,GAAGxC,GAAG,CAACyC,WAAJ,CAAgBF,QAAQ,CAACG,GAAT,EAAhB,CAAZ;IACA,IAAIC,GAAG,GAAG3C,GAAG,CAAC4C,OAAJ,CAAY,IAAZ,EAAkBJ,KAAlB,CAAV;;IAEA,IAAIA,KAAK,GAAG,CAAC,CAAT,IAAcG,GAAG,GAAG,CAAC,CAAzB,EAA4B;MAC1B;MACA,KAAKrC,UAAL,GAAkB,KAAKuB,gBAAL,CAAsB7B,GAAG,CAAC6C,SAAJ,CAAcL,KAAd,EAAqBG,GAArB,CAAtB,CAAlB;IACD;EACF;;EAEDG,QAAQ,CAACC,IAAD,EAAO;IACb,KAAKnC,IAAL,GAAYvB,OAAO,CAAC0D,IAAD,CAAnB;;IACA,IAAI5D,UAAU,CAAC4D,IAAD,CAAd,EAAsB;MACpB,KAAKpC,OAAL,GAAeoC,IAAf;MACA,OAAO3D,YAAY,CAAC2D,IAAD,EAAO,OAAP,CAAZ,CAA4BpD,QAA5B,GAAuCqC,IAAvC,EAAP;IACD;EACF;;EAEDtB,OAAO,CAACsC,IAAD,EAAOzC,IAAP,EAAa;IAClB,IAAIA,IAAI,KAAK,KAAb,EAAoB,OAAO,KAAP;;IAEpB,IAAIA,IAAJ,EAAU;MACR,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;QAC5B,OAAOA,IAAP;MACD,CAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;QACrC,IAAI0C,QAAQ,GAAG1C,IAAI,CAACyC,IAAD,CAAnB;;QACA,IAAIC,QAAJ,EAAc;UACZ,IAAI/C,GAAG,GAAG,KAAK4C,QAAL,CAAcG,QAAd,CAAV;;UACA,IAAI,CAAC/C,GAAL,EAAU;YACR,MAAM,IAAI0B,KAAJ,CACJ,yCAAyCqB,QAAQ,CAACtD,QAAT,EADrC,CAAN;UAGD;;UACD,OAAOO,GAAP;QACD;MACF,CAXM,MAWA,IAAIK,IAAI,YAAYvB,iBAApB,EAAuC;QAC5C,OAAOC,kBAAkB,CAACiE,aAAnB,CAAiC3C,IAAjC,EAAuCZ,QAAvC,EAAP;MACD,CAFM,MAEA,IAAIY,IAAI,YAAYtB,kBAApB,EAAwC;QAC7C,OAAOsB,IAAI,CAACZ,QAAL,EAAP;MACD,CAFM,MAEA,IAAI,KAAKsC,KAAL,CAAW1B,IAAX,CAAJ,EAAsB;QAC3B,OAAO4C,IAAI,CAACC,SAAL,CAAe7C,IAAf,CAAP;MACD,CAFM,MAEA;QACL,MAAM,IAAIqB,KAAJ,CACJ,6CAA6CrB,IAAI,CAACZ,QAAL,EADzC,CAAN;MAGD;IACF,CAzBD,MAyBO,IAAI,KAAKS,MAAT,EAAiB;MACtB,OAAO,KAAKW,YAAL,CAAkB,KAAKT,UAAvB,CAAP;IACD,CAFM,MAEA,IAAI,KAAKA,UAAT,EAAqB;MAC1B,IAAIJ,GAAG,GAAG,KAAKI,UAAf;MACA,IAAI0C,IAAJ,EAAU9C,GAAG,GAAGZ,IAAI,CAACD,OAAO,CAAC2D,IAAD,CAAR,EAAgB9C,GAAhB,CAAV;MACV,OAAO,KAAK4C,QAAL,CAAc5C,GAAd,CAAP;IACD;EACF;;EAEDG,SAAS,CAACgD,MAAD,EAASb,KAAT,EAAgB;IACvB,IAAI,CAACa,MAAL,EAAa,OAAO,KAAP;IACb,OAAOA,MAAM,CAAC/B,MAAP,CAAc,CAAd,EAAiBkB,KAAK,CAACf,MAAvB,MAAmCe,KAA1C;EACD;;EAEDc,WAAW,GAAG;IACZ,OAAO,CAAC,EACN,KAAKzC,QAAL,GAAgB0C,cAAhB,IACA,KAAK1C,QAAL,GAAgB0C,cAAhB,CAA+B9B,MAA/B,GAAwC,CAFlC,CAAR;EAID;;AA1He;;AA6HlB+B,MAAM,CAACC,OAAP,GAAiB3D,WAAjB;AACAA,WAAW,CAAC4D,OAAZ,GAAsB5D,WAAtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}