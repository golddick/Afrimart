{"ast":null,"code":"'use strict';\n\nlet {\n  isClean,\n  my\n} = require('./symbols');\n\nlet CssSyntaxError = require('./css-syntax-error');\n\nlet Stringifier = require('./stringifier');\n\nlet stringify = require('./stringify');\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue;\n    }\n\n    if (i === 'proxyCache') continue;\n    let value = obj[i];\n    let type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned));\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean] = false;\n    this[my] = true;\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = [];\n\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone());\n          } else {\n            this.append(node);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this;\n\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(/\\n\\s{4}at /, `$&${s.input.from}:${s.start.line}:${s.start.column}$&`);\n    }\n\n    return error;\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n\n    return this;\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let {\n        end,\n        start\n      } = this.rangeBy(opts);\n      return this.source.input.error(message, {\n        column: start.column,\n        line: start.line\n      }, {\n        column: end.column,\n        line: end.line\n      }, opts);\n    }\n\n    return new CssSyntaxError(message);\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node;\n        } else if (prop === 'root') {\n          return () => node.root().toProxy();\n        } else {\n          return node[prop];\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true;\n        node[prop] = value;\n\n        if (prop === 'prop' || prop === 'value' || prop === 'name' || prop === 'params' || prop === 'important' ||\n        /* c8 ignore next */\n        prop === 'text') {\n          node.markDirty();\n        }\n\n        return true;\n      }\n\n    };\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false;\n      let next = this;\n\n      while (next = next.parent) {\n        next[isClean] = false;\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined;\n    let index = this.parent.index(this);\n    return this.parent.nodes[index + 1];\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start;\n\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation);\n    } else if (opts.word) {\n      stringRepresentation = this.toString();\n      let index = stringRepresentation.indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation);\n    }\n\n    return pos;\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString();\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return {\n      column,\n      line\n    };\n  }\n\n  prev() {\n    if (!this.parent) return undefined;\n    let index = this.parent.index(this);\n    return this.parent.nodes[index - 1];\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    };\n    let end = this.source.end ? {\n      column: this.source.end.column + 1,\n      line: this.source.end.line\n    } : {\n      column: start.column + 1,\n      line: start.line\n    };\n\n    if (opts.word) {\n      let stringRepresentation = this.toString();\n      let index = stringRepresentation.indexOf(opts.word);\n\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation);\n        end = this.positionInside(index + opts.word.length, stringRepresentation);\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        };\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n\n    if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n      end = {\n        column: start.column + 1,\n        line: start.line\n      };\n    }\n\n    return {\n      end,\n      start\n    };\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier();\n    return str.raw(this, prop, defaultType);\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node);\n          bookmark = node;\n        } else {\n          this.parent.insertBefore(bookmark, node);\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n\n    return this;\n  }\n\n  root() {\n    let result = this;\n\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent;\n    }\n\n    return result;\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || new Map();\n    let inputsNextIndex = 0;\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue;\n      }\n\n      if (name === 'parent' || name === 'proxyCache') continue;\n      let value = this[name];\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs);\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input);\n\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n    }\n\n    return fixed;\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n\n    return this.proxyCache;\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    let result = '';\n    stringifier(this, i => {\n      result += i;\n    });\n    return result;\n  }\n\n  warn(result, text, opts) {\n    let data = {\n      node: this\n    };\n\n    for (let i in opts) data[i] = opts[i];\n\n    return result.warn(text, data);\n  }\n\n  get proxyOf() {\n    return this;\n  }\n\n}\n\nmodule.exports = Node;\nNode.default = Node;","map":{"version":3,"names":["isClean","my","require","CssSyntaxError","Stringifier","stringify","cloneNode","obj","parent","cloned","constructor","i","Object","prototype","hasOwnProperty","call","value","type","Array","isArray","map","j","Node","defaults","raws","name","nodes","node","clone","append","addToError","error","postcssNode","stack","source","test","s","replace","input","from","start","line","column","after","add","insertAfter","assign","overrides","before","insertBefore","cleanRaws","keepBetween","between","cloneAfter","cloneBefore","message","opts","end","rangeBy","getProxyProcessor","get","prop","root","toProxy","set","markDirty","next","undefined","index","positionBy","stringRepresentation","pos","positionInside","word","toString","indexOf","string","prev","length","endIndex","raw","defaultType","str","remove","removeChild","replaceWith","bookmark","foundSelf","result","toJSON","_","inputs","fixed","emitInputs","Map","inputsNextIndex","inputId","keys","proxyCache","Proxy","stringifier","warn","text","data","proxyOf","module","exports","default"],"sources":["/Users/macbook/Desktop/afrimartCom/node_modules/postcss/lib/node.js"],"sourcesContent":["'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}