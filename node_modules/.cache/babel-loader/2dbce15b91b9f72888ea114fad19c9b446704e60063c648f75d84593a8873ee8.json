{"ast":null,"code":"'use strict';\n\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\n\nlet {\n  dirname,\n  relative,\n  resolve,\n  sep\n} = require('path');\n\nlet {\n  pathToFileURL\n} = require('url');\n\nlet Input = require('./input');\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n    this.memoizedFileURLs = new Map();\n    this.memoizedPaths = new Map();\n    this.memoizedURLs = new Map();\n  }\n\n  addAnnotation() {\n    let content;\n\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + '.map';\n    }\n\n    let eol = '\\n';\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root = prev.root || dirname(prev.file);\n      let map;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null);\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n\n    if (this.root) {\n      let node;\n\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i];\n        if (node.type !== 'comment') continue;\n\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n    }\n  }\n\n  generate() {\n    this.clearAnnotation();\n\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result = '';\n      this.stringify(this.root, i => {\n        result += i;\n      });\n      return [result];\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev);\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile()\n      });\n      this.map.addMapping({\n        generated: {\n          column: 0,\n          line: 1\n        },\n        original: {\n          column: 0,\n          line: 1\n        },\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>'\n      });\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n\n  generateString() {\n    this.css = '';\n    this.map = new SourceMapGenerator({\n      file: this.outputFile()\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = '<no source>';\n    let mapping = {\n      generated: {\n        column: 0,\n        line: 0\n      },\n      original: {\n        column: 0,\n        line: 0\n      },\n      source: ''\n    };\n    let lines, last;\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str;\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node);\n          mapping.original.line = node.source.start.line;\n          mapping.original.column = node.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n\n      lines = str.match(/\\n/g);\n\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || {\n          raws: {}\n        };\n        let childless = node.type === 'decl' || node.type === 'atrule' && !node.nodes;\n\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.end.line;\n            mapping.original.column = node.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation);\n    }\n\n    return true;\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n\n    let annotation = this.mapOpts.annotation;\n\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline);\n    }\n\n    return true;\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    }\n\n    return this.previous().length > 0;\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent());\n    }\n\n    return true;\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return 'to.css';\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file;\n    if (file.charCodeAt(0) === 60\n    /* `<` */\n    ) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    let cached = this.memoizedPaths.get(file);\n    if (cached) return cached;\n    let from = this.opts.to ? dirname(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n\n    let path = relative(from, file);\n    this.memoizedPaths.set(file, path);\n    return path;\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map;\n\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input = new Input(this.css, this.opts);\n        if (input.map) this.previousMaps.push(input.map);\n      }\n    }\n\n    return this.previousMaps;\n  }\n\n  setSourcesContent() {\n    let already = {};\n\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from;\n\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>';\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from);\n    } else {\n      return this.toUrl(this.path(node.source.input.from));\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64');\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path);\n    if (cached) return cached;\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString();\n      this.memoizedFileURLs.set(path, fileURL);\n      return fileURL;\n    } else {\n      throw new Error('`map.absolute` option is not available in this PostCSS build');\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path);\n    if (cached) return cached;\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/');\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    this.memoizedURLs.set(path, url);\n    return url;\n  }\n\n}\n\nmodule.exports = MapGenerator;","map":{"version":3,"names":["SourceMapConsumer","SourceMapGenerator","require","dirname","relative","resolve","sep","pathToFileURL","Input","sourceMapAvailable","Boolean","pathAvailable","MapGenerator","constructor","stringify","root","opts","cssString","mapOpts","map","css","usesFileUrls","from","absolute","memoizedFileURLs","Map","memoizedPaths","memoizedURLs","addAnnotation","content","isInline","toBase64","toString","annotation","to","outputFile","eol","includes","applyPrevMaps","prev","previous","toUrl","path","file","sourcesContent","text","consumer","applySourceMap","clearAnnotation","node","i","nodes","length","type","indexOf","removeChild","replace","generate","isMap","generateMap","result","generateString","fromSourceMap","addMapping","generated","column","line","original","source","isSourcesContent","setSourcesContent","isAnnotation","noSource","mapping","lines","last","str","start","sourcePath","match","lastIndexOf","p","parent","raws","childless","semicolon","end","some","inline","withContent","charCodeAt","test","cached","get","set","previousMaps","walk","input","push","already","fromUrl","toFileUrl","setSourceContent","Buffer","window","btoa","unescape","encodeURIComponent","fileURL","Error","url","encodeURI","module","exports"],"sources":["/Users/macbook/Desktop/afrimartCom/node_modules/postcss/lib/map-generator.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}